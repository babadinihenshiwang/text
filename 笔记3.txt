1.meta
	- 设置页面中字符集
		<meta charset="utf-8" />
	- 设置当前页面的关键字
		<meta name="keywords" content="关键字1,关键字2,关键字N" />
	- 设置当前页面的描述
		<meta name="description" content="网页的描述" />
	- 设置页面的重定向
		<meta http-equiv="refresh" content="秒数;url=目标地址" />
	- 通过meta来为网页设置关键字和描述，会被搜索引擎检索，
		并且会在搜索结果中显示出来，但是并不会影响页面的排名。
		
2.内联框架
	- 内联框架用于向页面中引入另一个页面
	- iframe
	- 用法：<iframe src="" name="" width="" height="" ></iframe>
	- 属性：
		src：需要一个外部页面的地址（可以使用相对路径）
		name: 可以为内联框架指定一个名字，这个名字可以设置为a标签的target属性，
				这样当点击超链接时，目标页面将会在内联框架中打开
		width和height：用来设置内联框架的宽度和高度
	- 注意：一般开发中很少使用内联框架，因为内联框架中的内容不会被搜索引擎检索。

3.超链接
	- 超链接可以使页面从一个页面跳转到另一个页面
	- 超链接使用的是a标签：
		- 属性：
			href：执行一个目标资源的地址
			target: 可以指定在哪个窗口中打开目标页面
				可选值：
					_self:在当前窗口中打开（默认值）
					_blank:在一个新的窗口中打开（慎用）
					框架名字：会在对应的框架中打开页面
		- 用法：
			1.跳转到一个外部的网页
				<a href="http://www.baidu.com">去Baidu</a>
			2.跳转到内部页面
				<a href="相对路径">超链接</a>
			3.跳转到当前页面的指定位置
				<a href="#">回顶部</a>
				<a href="#id属性值">去指定位置</a>
			4.发送邮件的超链接
				<a href="mailto:邮件地址">发送邮件</a>
				
4.基本的语法				
	- 介绍xhtml的语法
		1.注释不能嵌套
			错误的：<!-- <!-- --> -->
		2.标签必须正确结束（成对出现或者是自结束标签）
		3.标签不能交叉嵌套
		4.属性必须有值且值必须加引号（双引号或单引号都行）
		5.html中不区分大小写，但是一般情况我们都使用小写
		
5.CSS
	- CSS叫做层叠样式表
	- 它负责设置页面中的样式，也就是结构、表现、行为中的表现。
	- CSS代码编写的位置：
		1.编写到标签内部的style属性当中
			例子：<p style="color:red">我是一段文字</p>
			特点：
				- 将css代码和html代码编写到一起，结构与表现耦合，维护起来不方便。
				- 不能复用，会造成页面中出现大量冗余代码
				
		2.编写到页面中的style标签中（内部样式表）（用的比较）
			例子：
				<style type="text/css">
					p{
						color:red;
					}
				</style>
			特点：
				- 进一步使html代码和css代码分离，方便维护
				- 可以通过选择器选中指定元素，可以使样式复用
				
		3.将样式表编写到外部的css文件中（外部样式表），然后通过link标签引入。（推荐的方式）
			例子：
				<link rel="stylesheet" type="text/css" href="css文件的路径" />
			特点：
				- 使HTML和CSS完全分离，可以使样式表在不同的页面里复用，方便维护
				- 将样式统一写在一个文件中，浏览器只需要加载一次就可以使用缓存了，提升了用户的访问速度
				
	- css的基本语法：
		- 选择器 {
				样式名1:样式值1;
				样式名2:样式值2;
				样式名3:样式值3;
		  }
		  
	- CSS的选择器：
		1.元素选择器
			作用：可以根据标签名在页面中选择指定元素
			语法：标签名{}
			例子: p{}
				- 会选中页面中的所有的p标签
		2.id选择器
			作用：可以根据元素的id属性值来选中指定元素
			语法: #id {}
			例子: #hello{}
				- 会选中页面中id属性值为hello的元素
		3.类选择器(class选择器)
			作用：可以根据元素的class属性值来选中指定的元素
			语法：.class{}
			例子：.hello{}
				- 会选中页面中所有的class属性为hello的元素
		4.复合选择选择器（交集选择器）：
			作用：可以选中同时满足多个条件的元素
			语法：选择器1选择器2选择3{}	
			例子：div.hello{}
				- 会选中页面中所有的class属性值为hello的div元素
		5.选择器的分组（并集选择器）：
			作用：可以选中多个选择器对应的元素
			语法：选择器1,选择器2,选择3{}	
			例子：div , .hello , p{}
				- 会选中页面中的所有的div和所有的class属性值为hello的元素和所有的p元素
		6.通配选择器
			作用：选择页面中的所有元素
			语法：*{}
			注意：通配选择器性能比较差，尽量避免使用
			
	- 内联元素和块元素：
		内联元素(行内元素)：只占用自身内容的大小，不会占用一整行。
					我们一般使用内联元素去包裹文字，为文字内容设置样式
					常见的内联元素：
						a  ， span ，img
		块元素：块元素会独占页面中的一整行
					我们一般使用块元素去做页面中的布局的
					常见块元素：
						div ，p ，h1~h6
						
		注意：
			- 我们一般使用块元素去包裹内联元素，而不会使用内联元素去包裹块元素
			- a元素可以包含任何元素，除了a本身
			- p元素不能嵌套任何的块元素！












		
	
				