1.浮动
	- 使用float使元素浮动
	- float有两个可选值：
		left：使元素向左浮动
		right: 使元素向右浮动
	- 当一个元素设置浮动以后，它会完全脱离文档流，并且会在页面提升一个层级，
		设置浮动以后，元素会尽量的向父元素的上方浮动，直到遇到父元素的边框或者其他浮动元素便停止浮动。
	- 遇到没有浮动的块元素，浮动元素也会停止浮动
	- 浮动元素浮动的高度，不会超过齐前边的兄弟元素的高度
	- 文本不会被浮动元素覆盖，它会环绕浮动元素的周围，我们可以使用浮动来实现文字环绕图片的效果。
	- 块元素：
		- 块元素设置浮动以后宽度不再占父元素的100%，而是被子元素撑开。
	- 内联元素：
		- 内联元素设置浮动以后会变成块元素
		
2.清除浮动：
	- clear
		- 所谓的清除浮动，指的是清除浮动元素对当前元素的影响。
		- 它并不会影响浮动元素本身。
		- 可选值：
			left：清除左侧浮动元素的影响
			right：清除右侧浮动元素的影响
			both：清除两侧浮动元素的影响
			
3.高度塌陷
	- 在文档流中，父元素的高度默认是被子元素撑开，子元素多高父元素就多高，
		当子元素脱离文档流以后，子元素便不能撑开父元素，会导致父元素的高度塌陷，
			父元素高度塌陷以后会影响到整个的页面的布局。
	- 解决方案：
		1.w3c推荐的方案：
			- 可以在父元素最后添加一个空的div
			- 并且为这个空的div添加一个样式：clear:both
			- 这样父元素就会被空的div撑开
			- 缺点：
				这个方案会在页面中添加冗余的代码，会给结构增加无用代码。
				
		2.使用after伪类(推荐方式)：
			- 通过after伪类向父元素的后边添加一个空的内容
			- 然后为空的内容设置为块元素，并且清除它的浮动
			- 实际上这种方式和上边的原理是一样的，只不过它不会为页面增加多余的代码
			- 例子：
				.clearfix:after{
					content:"";
					display:block;
					clear:both;
				}
			- 缺点：
				不兼容IE6了
				
		3.开启父元素的BFC
			- 根据W3C的规范，每一个元素都有一个隐含的属性BFC
			- BFC（Block Formatting Context）块级格式化环境
			- BFC在网页默认是关闭，可以通过一些属性来开启。
			- 开启BFC以后，元素会具有如下功能：
				1.子元素的垂直外边距不会与父元素的垂直外边距重叠
				2.开启BFC的元素不会被浮动元素所覆盖
				3.开启BFC的元素可以包含浮动子元素
			- 如何开启BFC：
				1.可以设置元素的display为inline-block
				2.可以设置元素的绝对定位
				3.设置为overflow为hidden（副作用最小）
				4.设置元素浮动
			- 所以我们可以通过：overflow:hidden来开启父元素的bfc
				以使父元素可以包含浮动的子元素	
			- 但是低版本的IE不支持BFC，所以使用以上方式不行，
				而IE中有个Has Layout隐含属性，它和BFC功能类似，
					所以对于低版本的IE来说，开启Has Layout即可
				开启方式：
					zoom:1





	
		