1.盒子模型
	- 根据w3c标准，将页面中的每一个元素都设计为一个矩形的盒子。
	- 将这些元素设计为盒子的好处就是方便我们对网页进行布局，
		所有的元素都变成盒子以后，我们的布局就变成了摆放盒子。
	- 盒子模型从里到外一共由以下几部分组成：
		1.内容区（content）
			- 内容区用来装着子元素，所有的子元素都是在父元素的内容区保存的
			- 设置内容区的大小：
				width：内容区的宽度
				height：内容区的高度
		2.内边距（padding）
			- 内边距指的是内容区和边框之间的距离
			- 我们一共有四个方向的内边距
				- 上内边距
					padding-top
					
				- 右内边距
					padding-right
				
				- 下内边距
					padding-bottom
				
				- 左内边距
					padding-left
					
			- 我们可以直接通过padding同时指定四个方向的内边距	
				- 如果只给padding传一个值
					padding:10px;
					- 表示将四个方向的内边距都设置为指定值。
					
				- 如果给padding指定两个值
					padding:10px 30px;
					- 在第一个值表示的是上下内边距，第二个值表示的是左右内边距
					
				- 如果给padding指定三个值
					padding:10px 30px 20px;
					- 第一个值表示上内边距，第二个值表示的是左右内边距，第三个值表示下内边距
					
				- 如果给padding指定四个值
					padding:10 20 30 40;
					- 如果指定四个值，则会分别设置上 右 下 左 四个方向的内边距
					
			- 当设置padding会影响盒子的整个可见匡的大小，并且我们元素的背景会延伸到padding中		
		
		3.边框（border）
			- 边框是盒子的可见匡的最外边的一部分
			- 边框也会影响盒子的可见框的大小
			- 边框也是四个方向
			- 边框相关的属性：
				宽度：border-width
				颜色：border-color
				样式：border-style
				- 这几个属性使用时和padding类似，可以同时指定四个边框，也可以指定某几个	
			- 边框的简写属性：
				border:使用border可以同时设置四个边框的宽度、颜色、样式
						并且三个属性没有顺序要求。
				例子：border:1px solid #000;		
		
		
		4.外边距（margin）
			- 外边距指的是当前盒子与其他盒子的距离
			- margin不会影响元素可见框的大小
			- 外边距使用的是margin，同样也有四个方向的外边距
			- margin-top margin-right margin-bottom margin-left
			- 同样也有简写属性margin，它的语法和padding类似
			- margin可以指定一个负值，如果指定一个负值，元素会向相反的方向移动。
			- margin还可以指定一个auto，
				如果将margin值设置为auto，浏览器将会自动设置margin值，
				如果将margin-left和margin-right都指定为auto，浏览器会自动将左右外边距设置为相等值，
					通过这种方式可以使子元素在父元素中居中
					所以我们经常使用如下代码设置子元素的居中：margin:0 auto;		
			- 垂直方向的相邻的外边距会发生折叠。		
					
	- 行内元素的盒模型：
		1.行内元素不支持width和height属性
		2.行内元素支持水平方向的padding，垂直方向的padding会影响行内元素，但是不会影响到页面的布局
		3.行内元素支持border
		4.行内元素支持水平方向margin，不支持垂直方向的
		
	- 可见框
		- 可见框指的是元素的盒子模型可见的部分
		- 可见框的大小由元素的内容区、内边距、边框共同决定
		- 可见框的宽度 = border-left-width + padding-left + width + padding-right + border-right-width;
		- 可见框的高度 = border-top-width + padding-top + height + padding-bottom + border-bottom-width;
		
	- display
		- 用来设置盒子的显示的类型
		- 可选属性：
			- none
				- 元素将不会在页面中显示，同时也不会占用页面中的位置
			- block
				- 元素将会以块元素的形式显示
			- inline
				- 元素将会以内联元素的形式显示
			- inline-block
				- 元素将会以行内块元素的形式显示
				
	- visibility	
		- 用来元素是否在页面中显示
		- 可选值：
			- visible：默认值，元素会正常在页面显示
			- hidden：元素会隐藏，不在页面中显示，但是它依然会占用位置
			
	- overflow
		- 用来设置元素如何处理溢出的内容
		- 可选值：
			auto：会自动根据需要生成滚动条
			scroll：会默认在元素中添加水平和垂直两个方向的滚动
			hidden：会将溢出的内容裁剪，不显示
			
	- 文档流
		- 页面中的所有的元素默认都是处在文档流当中的。
		- 在文档流当中的元素有如下特点：
			1.块元素：
				- 块元素在文档流按照从上到下的顺序排列
				- 块元素在文档流中宽度默认会撑满父元素
				- 块元素在文档流中高度默认被子元素撑开
			2.内联元素：
				- 内联元素在文档流中按照自左向右的顺序排列
					如果一行不足以方向所有的内联元素，则会换到下一行，
						继续自左向右排列。
				- 内联元素的宽度和高度都是默认被子元素撑开的		
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
		